global:
  ssl:
    enabled: true
  endpoints:
    networkName: "polkadot"
    networkShortName: "polkadot"
    deployment:
      enabled: true
      domain: "region.example.com"
    aggregate:
      enabled: true
      domain: "example.com"
backends:
  healthCheck:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # For Let's Encrypt
      # cert-manager.io/cluster-issuer: "letsencrypt"
      #
      # For CloudFlare Origin CA
      # cert-manager.io/issuer: cloudflare-prod
      # cert-manager.io/issuer-kind: OriginIssuer
      # cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
      #
    upstreamServer:
      uri: "localhost"
      port: 5000
  websockets:
    image: "868027517775.dkr.ecr.us-west-2.amazonaws.com/websocket-logger:v0.0.1"
    enabled: true
    replicas: 1
    logClient: true
    logServer: false
    annotations:
      kubernetes.io/ingress.class: nginx
      # For Let's Encrypt
      # cert-manager.io/cluster-issuer: "letsencrypt"
      #
      # For CloudFlare Origin CA
      # cert-manager.io/issuer: cloudflare-prod
      # cert-manager.io/issuer-kind: OriginIssuer
      # cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
      #
    upstreamServer:
      uri: "localhost"
      port: 5000
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    scaler:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      avgCPU: 50
      avgMem: 100Mi
  jsonRPC:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # For Let's Encrypt
      # cert-manager.io/cluster-issuer: "letsencrypt"
      #
      # For CloudFlare Origin CA
      # cert-manager.io/issuer: cloudflare-prod
      # cert-manager.io/issuer-kind: OriginIssuer
      # cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
      #
    upstreamServer:
      uri: "localhost"
      port: 5000